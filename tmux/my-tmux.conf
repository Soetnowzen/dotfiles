# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and - {
bind | split-window -h
bind -n M-| split-window -h
bind - split-window -v
bind -n M-- split-window -v
unbind '"'
unbind %
# }

# Change terminal from screen to 256color
set -g default-terminal "xterm-256color"

# alt+keybinding {
# vim navigation
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -n M-n next-window
bind -n M-p previous-window
bind -n M-c new-window
bind -n M-d detach-client
bind -n M-q display-panes

bind -n M-Up resize-pane -U 1
bind -n M-Down resize-pane -D 1
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
# }

# reload config file {
unbind r
bind r source-file ~/.tmux.conf
# }

# Allows for faster key repetition
set -s escape-time 0
# Extend the repeat interval for repeatable commands (e.g., resize-pane)
set -sg repeat-time 1001

# Expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

# Design {
# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename on
# renumber windows when a window is closed
set -g renumber-windows on

#set terminal title
set -g set-titles on
set -g set-titles-string '(#S) #h [#I: #W]|Pane: #P|%a %H:%M %d/%m|#(uptime | cut -f 4-6 -d " " | cut -f 1 -d ",")|avg load:#(cut -d " " -f 1-4 /proc/loadavg) '

# slightly longer pane indicators display time
set -g display-panes-time 800
# slightly longer status messages display time
set -g display-time 1000

# panes
set-option -g pane-active-border-fg blue

# Scroll History
set -g history-limit 30000

set -g xterm-keys on

set-window-option -g xterm-keys on

set-window-option -g visual-bell on
# set-window-option -g bell-action other
# }

## Status bar design {
# status line
set -g status-justify left
set -g status-bg black
set -g status-fg green
set -g status-interval 1

# messaging
set -g message-bg black
set -g message-fg yellow
set -g message-command-fg blue
set -g message-command-bg black

# window mode
setw -g mode-bg magenta
setw -g mode-fg black

# window status
setw -g window-status-separator |
setw -g window-status-format "#[fg=black]#[bg=yellow]#F#I: #W#F"
setw -g window-status-current-format "#[bg=black]#[fg=yellow]#F#I: #W#F"
setw -g window-status-current-bg black
setw -g window-status-current-fg cyan
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse
set -g status-justify centre

# Info on left
# set -g status-left '(#S) #(whoami)|'
set -g status-left '(#S) #(whoami)'
set -g status-left-length 40

# Info on right
set -g status-right 'Pane: #P|%a %H:%M %d/%m|#(uptime | cut -f 4-6 -d " " | cut -f 1 -d ",")#[default]|#[fg=cyan]avg load:#(cut -d " " -f 1-4 /proc/loadavg) '
set -g status-right-length 80
# }

# Mouse {
# Adding scollback
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; \
  set -g mode-mouse on; \
  set -g mouse-resize-pane on; \
  set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"
# tmux <2.1
# set -g mouse on

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# set -g mode-mouse on
set-option -s set-clipboard off
# bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -se c -i"

# Allow mouse to select which pane to use
# set -g mouse-select-pane on

# # Allow mouse dragging to resize panes
# set -g mouse-resize-pane on

# # Allow mouse to select windows
# set -g mouse-select-window on
# }

# pane movement {
bind-key ! choose-window 'join-pane -h -s "%%"'
bind-key @ choose-window 'join-pane -h -t "%%"'
bind-key + command-prompt "break-pane -t :"
# }

# lock {
set -g lock-command vlock
set -g lock-after-time 1800
# set -g lock-server on
# set -g renumber-windwos on
# }

# Notify if other windows has activities {
setw -g monitor-activity on
set -g visual-activity on
# }

# set vi keys {
unbind [ # ]
bind Escape copy-mode
setw -g mode-keys vi
# }
