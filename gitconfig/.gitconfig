[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	pager = true
	ui = auto
[color "branch"]
	upstream = yellow
	local = red
	remote = blue
	current = green
	plain = magenta
	reset = blue
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
	# commit
	# context
	# func
	# plain
	# whitespace
[color "status"]
	added = green
	changed = red
	untracked = cyan
	# branch
	# header
	# localBranch
	# noBranch
	# remoteBranch
	# unmerged
	# untracked
	# updated
[color "interactive"]
	error = red
	header = yellow
	help = white
	plain = magenta
	prompt = blue
	reset = blue
[color "decorate"]
	HEAD = yellow
	branch = yellow
	grafted = blue
	remoteBranch = yellow
	stash = bold red
	tag = bold magenta
[core]
	editor = vim
	pager = less -RFX
	whitespace = trailing-space,space-before-tab
	autocrlf = input
[push]
	default = tracking
[merge]
	tool = vimdiff
[init]
	templatedir = ~/.git_template
[mergetool]
	keepBackup = false
[diff]
	tool = vimdiff
	mnemonicprefix = true
	renames = copies
	conflictstyle = diff3
[alias]
	a = add
	aa = add --all
	alias =  config --get-regexp alias
	ap = add -p
	au = add -u
	bi = bisect run # <my_script> <arguments>
	br = branch
	bs = branch -vv
	c = commit
	ca = commit --amend
	can = commit --amend --no-edit
	ci = commit
	cla = clean -xdf # clean all untracked files
	cm = commit -m
	co = checkout
	coh = checkout HEAD
	com = checkout master
	cop = checkout -p
	cp = cherry-pick
	cs = commit -s
	d = diff
	dc = diff --cached
	dt = difftool
	dw = diff --word-diff
	# dtest = "!git diff | gawk 'match($0,\"^@@ -([0-9]+),[0-9]+ [+]([0-9]+),[0-9]+ @@\",a){minus=a[1];plus=a[2];next};/^(---|\+\+\+|[^-+ ])/{print;next};{line=substr($0,2)};/^-/{print \"-\" minus++ \":\" line;next};/^[+]/{print \"+\" plus++ \":\" line;next};{print \"(\" minus++ \",\" plus++ \"):\"line}'"
	# dtest = "!git diff | gawk 'match($0,\"^@@ -([0-9]+),[0-9]+ [+]([0-9]+),[0-9]+ @@\",a){minus=a[1];plus=a[2];next};/^(---|\+\+\+|[^-+ ])/{print;next};{line=substr($0,2)};/^-/{print \"-\" minus++ \":\" line;next};/^[+]/{print \"+\" plus++ \":\" line;next};{print \"(\" minus++ \",\" plus++ \"):\"line}'"
	f = fetch
	fa = fetch --all
	fb = "!feature_branch() { git checkout -b $1 origin/master; }; feature_branch"
	featureBranch = "!feature_branch() { git checkout -b $1 origin/master; }; feature_branch"
	filelog = log -u
	files = diff-tree --no-commit-id --name-only -r
	fl = log -u
	head = rev-parse HEAD
	la = "!git config -l | grep alias | cut -c 7-"
	lg = !"git lg3"
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(red)%h %C(yellow)%d%C(reset)%s%C(blue)[%an]%C(green)(%ar)%C(reset)' --all
	lg2 = log --decorate --graph --pretty=format:"%C(Yellow)%h%C(red)%d\\ %C(reset)%s\\ %C(blue)[%cn]"
	lg3 = log --graph --abbrev-commit --decorate --format=format:"%C(red)%h\\ %C(yellow)%d%C(reset)%s%C(blue)[%an]%C(green)(%ai)%C(reset)" --all
	lg4 = log --format="%Cred%h%Creset\\ %s%Cgreen(%cr)%C(blue)<%an>%Creset%C(yellow)%d%Creset" --no-merges
	lg5 = log --graph --abbrev-commit --decorate --format=format:"%C(red)%H\\ %C(yellow)%d%C(reset)%s%C(blue)[%an]%C(green)(%ai)%C(reset)" --all
	ll = log --graph --decorate --numstat --format=format:"%C(red)%h\\ %C(yellow)%d%C(reset)%s%C(blue)[%an]%C(green)(%ai)%C(reset)" --all
	ll2 = log --graph --decorate --numstat --pretty=format:"%C(red)%h%C(yellow)%d\\ %C(reset)%s\\ %C(blue)[%cn]%C(green)(%ar)"
	ls = diff-tree --no-commit-id --name-only -r HEAD
	mt = mergetool
	ours = checkout --ours --
	pl = pull
	pr = pull --rebase
	prb = pull --rebase origin master
	plb = pull --no-ff origin master
	ps = push
	psd = push origin HEAD:refs/drafts/master
	psf = push origin HEAD:refs/for/master
	r = revert
	rc = rebase --continue
	restore = checkout -m --
	rh = "!reset_hard_function() { git reset HEAD~$1 --hard; }; reset_hard_function"
	rs = "!reset_function() { git reset HEAD~$1; }; reset_function"
	s = status
	search = log --abbrev-commit --decorate --format=format:"%C(red)%h\\ %C(yellow)%d%C(reset)%s%C(blue)[%an]%C(green)(%ai)%C(reset)" --all -S
	sh = show
	sl = stash list
	sp = stash pop
	ss = status -s
	st = stash save
	sts = stash show -p
	sw = show --word-diff
	t = tag
	theirs = checkout --theirs --
	zip = archive --format=zip HEAD
	zip-latest = archive -o latest.zip HEAD
